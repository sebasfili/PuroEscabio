#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PuroEscabio")]
	public partial class PuroEscabioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBebida(Bebida instance);
    partial void UpdateBebida(Bebida instance);
    partial void DeleteBebida(Bebida instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertBitacora(Bitacora instance);
    partial void UpdateBitacora(Bitacora instance);
    partial void DeleteBitacora(Bitacora instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertFactura_Detalle(Factura_Detalle instance);
    partial void UpdateFactura_Detalle(Factura_Detalle instance);
    partial void DeleteFactura_Detalle(Factura_Detalle instance);
    partial void InsertFamilia(Familia instance);
    partial void UpdateFamilia(Familia instance);
    partial void DeleteFamilia(Familia instance);
    partial void InsertPai(Pai instance);
    partial void UpdatePai(Pai instance);
    partial void DeletePai(Pai instance);
    partial void InsertPatente(Patente instance);
    partial void UpdatePatente(Patente instance);
    partial void DeletePatente(Patente instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    #endregion
		
		public PuroEscabioDataContext() : 
				base(global::DAL.Properties.Settings.Default.PuroEscabioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PuroEscabioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PuroEscabioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PuroEscabioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PuroEscabioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bebida> Bebidas
		{
			get
			{
				return this.GetTable<Bebida>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Bitacora> Bitacoras
		{
			get
			{
				return this.GetTable<Bitacora>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Factura_Detalle> Factura_Detalles
		{
			get
			{
				return this.GetTable<Factura_Detalle>();
			}
		}
		
		public System.Data.Linq.Table<Familia> Familias
		{
			get
			{
				return this.GetTable<Familia>();
			}
		}
		
		public System.Data.Linq.Table<FamiliaPatente> FamiliaPatentes
		{
			get
			{
				return this.GetTable<FamiliaPatente>();
			}
		}
		
		public System.Data.Linq.Table<Pai> Pais
		{
			get
			{
				return this.GetTable<Pai>();
			}
		}
		
		public System.Data.Linq.Table<Patente> Patentes
		{
			get
			{
				return this.GetTable<Patente>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Personas
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rols
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<RolPatente> RolPatentes
		{
			get
			{
				return this.GetTable<RolPatente>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bebida")]
	public partial class Bebida : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private string _SKU;
		
		private System.Nullable<decimal> _Precio;
		
		private EntitySet<Factura_Detalle> _Factura_Detalles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    #endregion
		
		public Bebida()
		{
			this._Factura_Detalles = new EntitySet<Factura_Detalle>(new Action<Factura_Detalle>(this.attach_Factura_Detalles), new Action<Factura_Detalle>(this.detach_Factura_Detalles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="VarChar(50)")]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bebida_Factura_Detalle", Storage="_Factura_Detalles", ThisKey="Id", OtherKey="Bebida_id")]
		public EntitySet<Factura_Detalle> Factura_Detalles
		{
			get
			{
				return this._Factura_Detalles;
			}
			set
			{
				this._Factura_Detalles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura_Detalles(Factura_Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Bebida = this;
		}
		
		private void detach_Factura_Detalles(Factura_Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Bebida = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Usuario1;
		
		private string _Contraseña;
		
		private System.Nullable<int> _Persona_id;
		
		private System.Nullable<int> _Id_rol;
		
		private string _Dig_ver_h;
		
		private EntitySet<Bitacora> _Bitacoras;
		
		private EntitySet<Factura> _Facturas;
		
		private EntityRef<Persona> _Persona;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnPersona_idChanging(System.Nullable<int> value);
    partial void OnPersona_idChanged();
    partial void OnId_rolChanging(System.Nullable<int> value);
    partial void OnId_rolChanged();
    partial void OnDig_ver_hChanging(string value);
    partial void OnDig_ver_hChanged();
    #endregion
		
		public Usuario()
		{
			this._Bitacoras = new EntitySet<Bitacora>(new Action<Bitacora>(this.attach_Bitacoras), new Action<Bitacora>(this.detach_Bitacoras));
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Persona = default(EntityRef<Persona>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="VarChar(50)")]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persona_id", DbType="Int")]
		public System.Nullable<int> Persona_id
		{
			get
			{
				return this._Persona_id;
			}
			set
			{
				if ((this._Persona_id != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersona_idChanging(value);
					this.SendPropertyChanging();
					this._Persona_id = value;
					this.SendPropertyChanged("Persona_id");
					this.OnPersona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_rol", DbType="Int")]
		public System.Nullable<int> Id_rol
		{
			get
			{
				return this._Id_rol;
			}
			set
			{
				if ((this._Id_rol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_rolChanging(value);
					this.SendPropertyChanging();
					this._Id_rol = value;
					this.SendPropertyChanged("Id_rol");
					this.OnId_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dig_ver_h", DbType="VarChar(64)")]
		public string Dig_ver_h
		{
			get
			{
				return this._Dig_ver_h;
			}
			set
			{
				if ((this._Dig_ver_h != value))
				{
					this.OnDig_ver_hChanging(value);
					this.SendPropertyChanging();
					this._Dig_ver_h = value;
					this.SendPropertyChanged("Dig_ver_h");
					this.OnDig_ver_hChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Bitacora", Storage="_Bitacoras", ThisKey="Id", OtherKey="Usuario_id")]
		public EntitySet<Bitacora> Bitacoras
		{
			get
			{
				return this._Bitacoras;
			}
			set
			{
				this._Bitacoras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Factura", Storage="_Facturas", ThisKey="Id", OtherKey="Usuario_id")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Persona", ThisKey="Persona_id", OtherKey="Id", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._Persona_id = value.Id;
					}
					else
					{
						this._Persona_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Rol", ThisKey="Id_rol", OtherKey="Id", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._Id_rol = value.Id;
					}
					else
					{
						this._Id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bitacoras(Bitacora entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Bitacoras(Bitacora entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bitacora")]
	public partial class Bitacora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Fecha_inicio;
		
		private System.Nullable<System.DateTime> _Fecha_fin;
		
		private System.Nullable<int> _Usuario_id;
		
		private string _Descripcion;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFecha_inicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_inicioChanged();
    partial void OnFecha_finChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_finChanged();
    partial void OnUsuario_idChanging(System.Nullable<int> value);
    partial void OnUsuario_idChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Bitacora()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_inicio", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_inicio
		{
			get
			{
				return this._Fecha_inicio;
			}
			set
			{
				if ((this._Fecha_inicio != value))
				{
					this.OnFecha_inicioChanging(value);
					this.SendPropertyChanging();
					this._Fecha_inicio = value;
					this.SendPropertyChanged("Fecha_inicio");
					this.OnFecha_inicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_fin", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_fin
		{
			get
			{
				return this._Fecha_fin;
			}
			set
			{
				if ((this._Fecha_fin != value))
				{
					this.OnFecha_finChanging(value);
					this.SendPropertyChanging();
					this._Fecha_fin = value;
					this.SendPropertyChanged("Fecha_fin");
					this.OnFecha_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_id", DbType="Int")]
		public System.Nullable<int> Usuario_id
		{
			get
			{
				return this._Usuario_id;
			}
			set
			{
				if ((this._Usuario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuario_idChanging(value);
					this.SendPropertyChanging();
					this._Usuario_id = value;
					this.SendPropertyChanged("Usuario_id");
					this.OnUsuario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Bitacora", Storage="_Usuario", ThisKey="Usuario_id", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Bitacoras.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Bitacoras.Add(this);
						this._Usuario_id = value.Id;
					}
					else
					{
						this._Usuario_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Razon_social;
		
		private string _Tipo_factura;
		
		private System.Nullable<int> _CUIT;
		
		private System.Nullable<int> _CUIT_CUIL_cliente;
		
		private System.Nullable<int> _Usuario_id;
		
		private EntitySet<Factura_Detalle> _Factura_Detalles;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnRazon_socialChanging(string value);
    partial void OnRazon_socialChanged();
    partial void OnTipo_facturaChanging(string value);
    partial void OnTipo_facturaChanged();
    partial void OnCUITChanging(System.Nullable<int> value);
    partial void OnCUITChanged();
    partial void OnCUIT_CUIL_clienteChanging(System.Nullable<int> value);
    partial void OnCUIT_CUIL_clienteChanged();
    partial void OnUsuario_idChanging(System.Nullable<int> value);
    partial void OnUsuario_idChanged();
    #endregion
		
		public Factura()
		{
			this._Factura_Detalles = new EntitySet<Factura_Detalle>(new Action<Factura_Detalle>(this.attach_Factura_Detalles), new Action<Factura_Detalle>(this.detach_Factura_Detalles));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Razon_social", DbType="VarChar(100)")]
		public string Razon_social
		{
			get
			{
				return this._Razon_social;
			}
			set
			{
				if ((this._Razon_social != value))
				{
					this.OnRazon_socialChanging(value);
					this.SendPropertyChanging();
					this._Razon_social = value;
					this.SendPropertyChanged("Razon_social");
					this.OnRazon_socialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_factura", DbType="Char(10)")]
		public string Tipo_factura
		{
			get
			{
				return this._Tipo_factura;
			}
			set
			{
				if ((this._Tipo_factura != value))
				{
					this.OnTipo_facturaChanging(value);
					this.SendPropertyChanging();
					this._Tipo_factura = value;
					this.SendPropertyChanged("Tipo_factura");
					this.OnTipo_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIT", DbType="Int")]
		public System.Nullable<int> CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIT_CUIL_cliente", DbType="Int")]
		public System.Nullable<int> CUIT_CUIL_cliente
		{
			get
			{
				return this._CUIT_CUIL_cliente;
			}
			set
			{
				if ((this._CUIT_CUIL_cliente != value))
				{
					this.OnCUIT_CUIL_clienteChanging(value);
					this.SendPropertyChanging();
					this._CUIT_CUIL_cliente = value;
					this.SendPropertyChanged("CUIT_CUIL_cliente");
					this.OnCUIT_CUIL_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_id", DbType="Int")]
		public System.Nullable<int> Usuario_id
		{
			get
			{
				return this._Usuario_id;
			}
			set
			{
				if ((this._Usuario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuario_idChanging(value);
					this.SendPropertyChanging();
					this._Usuario_id = value;
					this.SendPropertyChanged("Usuario_id");
					this.OnUsuario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Factura_Detalle", Storage="_Factura_Detalles", ThisKey="Id", OtherKey="Factura_id")]
		public EntitySet<Factura_Detalle> Factura_Detalles
		{
			get
			{
				return this._Factura_Detalles;
			}
			set
			{
				this._Factura_Detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Factura", Storage="_Usuario", ThisKey="Usuario_id", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._Usuario_id = value.Id;
					}
					else
					{
						this._Usuario_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura_Detalles(Factura_Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Factura_Detalles(Factura_Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura_Detalle")]
	public partial class Factura_Detalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Bebida_id;
		
		private System.Nullable<int> _Factura_id;
		
		private EntityRef<Bebida> _Bebida;
		
		private EntityRef<Factura> _Factura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBebida_idChanging(System.Nullable<int> value);
    partial void OnBebida_idChanged();
    partial void OnFactura_idChanging(System.Nullable<int> value);
    partial void OnFactura_idChanged();
    #endregion
		
		public Factura_Detalle()
		{
			this._Bebida = default(EntityRef<Bebida>);
			this._Factura = default(EntityRef<Factura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bebida_id", DbType="Int")]
		public System.Nullable<int> Bebida_id
		{
			get
			{
				return this._Bebida_id;
			}
			set
			{
				if ((this._Bebida_id != value))
				{
					if (this._Bebida.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBebida_idChanging(value);
					this.SendPropertyChanging();
					this._Bebida_id = value;
					this.SendPropertyChanged("Bebida_id");
					this.OnBebida_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factura_id", DbType="Int")]
		public System.Nullable<int> Factura_id
		{
			get
			{
				return this._Factura_id;
			}
			set
			{
				if ((this._Factura_id != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactura_idChanging(value);
					this.SendPropertyChanging();
					this._Factura_id = value;
					this.SendPropertyChanged("Factura_id");
					this.OnFactura_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bebida_Factura_Detalle", Storage="_Bebida", ThisKey="Bebida_id", OtherKey="Id", IsForeignKey=true)]
		public Bebida Bebida
		{
			get
			{
				return this._Bebida.Entity;
			}
			set
			{
				Bebida previousValue = this._Bebida.Entity;
				if (((previousValue != value) 
							|| (this._Bebida.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bebida.Entity = null;
						previousValue.Factura_Detalles.Remove(this);
					}
					this._Bebida.Entity = value;
					if ((value != null))
					{
						value.Factura_Detalles.Add(this);
						this._Bebida_id = value.Id;
					}
					else
					{
						this._Bebida_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bebida");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Factura_Detalle", Storage="_Factura", ThisKey="Factura_id", OtherKey="Id", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Factura_Detalles.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Factura_Detalles.Add(this);
						this._Factura_id = value.Id;
					}
					else
					{
						this._Factura_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Familia")]
	public partial class Familia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private string _Codigo_familia;
		
		private EntitySet<Patente> _Patentes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCodigo_familiaChanging(string value);
    partial void OnCodigo_familiaChanged();
    #endregion
		
		public Familia()
		{
			this._Patentes = new EntitySet<Patente>(new Action<Patente>(this.attach_Patentes), new Action<Patente>(this.detach_Patentes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo_familia", DbType="VarChar(50)")]
		public string Codigo_familia
		{
			get
			{
				return this._Codigo_familia;
			}
			set
			{
				if ((this._Codigo_familia != value))
				{
					this.OnCodigo_familiaChanging(value);
					this.SendPropertyChanging();
					this._Codigo_familia = value;
					this.SendPropertyChanged("Codigo_familia");
					this.OnCodigo_familiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Familia_Patente", Storage="_Patentes", ThisKey="Id", OtherKey="Id_familia")]
		public EntitySet<Patente> Patentes
		{
			get
			{
				return this._Patentes;
			}
			set
			{
				this._Patentes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patentes(Patente entity)
		{
			this.SendPropertyChanging();
			entity.Familia = this;
		}
		
		private void detach_Patentes(Patente entity)
		{
			this.SendPropertyChanging();
			entity.Familia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamiliaPatente")]
	public partial class FamiliaPatente
	{
		
		private System.Nullable<int> _Id_familia;
		
		private System.Nullable<int> _Id_patente;
		
		public FamiliaPatente()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_familia", DbType="Int")]
		public System.Nullable<int> Id_familia
		{
			get
			{
				return this._Id_familia;
			}
			set
			{
				if ((this._Id_familia != value))
				{
					this._Id_familia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_patente", DbType="Int")]
		public System.Nullable<int> Id_patente
		{
			get
			{
				return this._Id_patente;
			}
			set
			{
				if ((this._Id_patente != value))
				{
					this._Id_patente = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private EntitySet<Persona> _Personas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Pai()
		{
			this._Personas = new EntitySet<Persona>(new Action<Persona>(this.attach_Personas), new Action<Persona>(this.detach_Personas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Persona", Storage="_Personas", ThisKey="Id", OtherKey="Pais_id")]
		public EntitySet<Persona> Personas
		{
			get
			{
				return this._Personas;
			}
			set
			{
				this._Personas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Personas(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patente")]
	public partial class Patente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private string _Codigo_patente;
		
		private System.Nullable<int> _Id_familia;
		
		private EntityRef<Familia> _Familia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCodigo_patenteChanging(string value);
    partial void OnCodigo_patenteChanged();
    partial void OnId_familiaChanging(System.Nullable<int> value);
    partial void OnId_familiaChanged();
    #endregion
		
		public Patente()
		{
			this._Familia = default(EntityRef<Familia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo_patente", DbType="VarChar(50)")]
		public string Codigo_patente
		{
			get
			{
				return this._Codigo_patente;
			}
			set
			{
				if ((this._Codigo_patente != value))
				{
					this.OnCodigo_patenteChanging(value);
					this.SendPropertyChanging();
					this._Codigo_patente = value;
					this.SendPropertyChanged("Codigo_patente");
					this.OnCodigo_patenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_familia", DbType="Int")]
		public System.Nullable<int> Id_familia
		{
			get
			{
				return this._Id_familia;
			}
			set
			{
				if ((this._Id_familia != value))
				{
					if (this._Familia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_familiaChanging(value);
					this.SendPropertyChanging();
					this._Id_familia = value;
					this.SendPropertyChanged("Id_familia");
					this.OnId_familiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Familia_Patente", Storage="_Familia", ThisKey="Id_familia", OtherKey="Id", IsForeignKey=true)]
		public Familia Familia
		{
			get
			{
				return this._Familia.Entity;
			}
			set
			{
				Familia previousValue = this._Familia.Entity;
				if (((previousValue != value) 
							|| (this._Familia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Familia.Entity = null;
						previousValue.Patentes.Remove(this);
					}
					this._Familia.Entity = value;
					if ((value != null))
					{
						value.Patentes.Add(this);
						this._Id_familia = value.Id;
					}
					else
					{
						this._Id_familia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Familia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private System.Nullable<decimal> _DNI;
		
		private string _Direccion;
		
		private string _Provincia_estado;
		
		private System.Nullable<int> _Pais_id;
		
		private EntitySet<Usuario> _Usuarios;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDNIChanging(System.Nullable<decimal> value);
    partial void OnDNIChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnProvincia_estadoChanging(string value);
    partial void OnProvincia_estadoChanged();
    partial void OnPais_idChanging(System.Nullable<int> value);
    partial void OnPais_idChanged();
    #endregion
		
		public Persona()
		{
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia_estado", DbType="VarChar(50)")]
		public string Provincia_estado
		{
			get
			{
				return this._Provincia_estado;
			}
			set
			{
				if ((this._Provincia_estado != value))
				{
					this.OnProvincia_estadoChanging(value);
					this.SendPropertyChanging();
					this._Provincia_estado = value;
					this.SendPropertyChanged("Provincia_estado");
					this.OnProvincia_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_id", DbType="Int")]
		public System.Nullable<int> Pais_id
		{
			get
			{
				return this._Pais_id;
			}
			set
			{
				if ((this._Pais_id != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_idChanging(value);
					this.SendPropertyChanging();
					this._Pais_id = value;
					this.SendPropertyChanged("Pais_id");
					this.OnPais_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Usuarios", ThisKey="Id", OtherKey="Persona_id")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Persona", Storage="_Pai", ThisKey="Pais_id", OtherKey="Id", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Personas.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Personas.Add(this);
						this._Pais_id = value.Id;
					}
					else
					{
						this._Pais_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private EntitySet<Usuario> _Usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Rol()
		{
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Usuarios", ThisKey="Id", OtherKey="Id_rol")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolPatente")]
	public partial class RolPatente
	{
		
		private System.Nullable<int> _Id_patente;
		
		private System.Nullable<int> _Id_rol;
		
		public RolPatente()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_patente", DbType="Int")]
		public System.Nullable<int> Id_patente
		{
			get
			{
				return this._Id_patente;
			}
			set
			{
				if ((this._Id_patente != value))
				{
					this._Id_patente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_rol", DbType="Int")]
		public System.Nullable<int> Id_rol
		{
			get
			{
				return this._Id_rol;
			}
			set
			{
				if ((this._Id_rol != value))
				{
					this._Id_rol = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
